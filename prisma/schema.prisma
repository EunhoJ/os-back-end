generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model chamados {
  id_chamado         Int         @id @default(autoincrement())
  id_cliente         Int
  id_equipamento     Int
  id_tecnico         Int?
  data_abertura      DateTime    @db.Timestamp(6)
  status             String?     @default("aberto") @db.VarChar(30)
  prioridade         String?     @db.VarChar(20)
  descricao_problema String?
  solucao            String?
  data_fechamento    DateTime?   @db.Timestamp(6)
  clientes           clientes    @relation(fields: [id_cliente], references: [id_cliente], onDelete: Cascade, map: "fk_cliente")
  equipamento        equipamento @relation(fields: [id_equipamento], references: [id_equipamento], onDelete: Cascade, map: "fk_equipamento")
  tecnicos           tecnicos?   @relation(fields: [id_tecnico], references: [id_tecnico], map: "fk_tecnico")
}

model clientes {
  id_cliente          Int           @id @default(autoincrement())
  cpf_cliente         String        @unique @db.VarChar(14)
  nome_cliente        String?       @db.VarChar(100)
  tel_fixo_cliente    String?       @db.VarChar(15)
  tel_celular_cliente String?       @db.VarChar(15)
  data_nasc_cliente   DateTime?     @db.Date
  cep                 String?       @db.VarChar(15)
  endereco_cliente    String?       @db.VarChar(50)
  bairro_cliente      String?       @db.VarChar(50)
  email_cliente       String?       @db.VarChar(50)
  senha_cliente       String?       @db.VarChar(255)
  obs_cliente         String?
  chamados            chamados[]
  equipamento         equipamento[]
}

model controle_acessos {
  id_acesso         Int       @id @default(autoincrement())
  usuario           String    @unique @db.VarChar(50)
  senha             String    @db.VarChar(255)
  nome              String?   @db.VarChar(100)
  nivel_acesso      String    @default("usuario") @db.VarChar(30)
  avatar_url        String? 
  status            String    @default("ativo") @db.VarChar(20)
  ativo             Boolean   @default(true)
  data_criacao      DateTime? @default(now()) @db.Timestamp(6)
  data_ultimo_login DateTime? @db.Timestamp(6)
}

model equipamento {
  id_equipamento        Int        @id @default(autoincrement())
  id_cliente            Int
  nome_equipamento      String     @db.VarChar(150)
  descricao_equipamento String?
  defeito               String?    @db.VarChar(255)
  marca                 String?    @db.VarChar(50)
  modelo                String?    @db.VarChar(50)
  serial_number         String?    @unique @db.VarChar(100)
  categoria             String?    @db.VarChar(50)
  quantidade_estoque    Int?       @default(0)
  preco                 Decimal    @db.Decimal(10, 2)
  status                String?    @default("ativo") @db.VarChar(30)
  observacoes           String?
  chamados              chamados[]
  clientes              clientes   @relation(fields: [id_cliente], references: [id_cliente], onDelete: Cascade, map: "fk_cliente")
}

model tecnicos {
  id_tecnico   Int        @id @default(autoincrement())
  nome_tecnico String?    @db.VarChar(100)
  email        String?    @db.VarChar(100)
  telefone     String?    @db.VarChar(15)
  chamados     chamados[]
}
